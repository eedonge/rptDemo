<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>D3 tutorial</title>
</head>
<body>
	<script>

/* path, pie
		var data = [10, 50, 80];
		var r = 300;

		var color = d3.scale.ordinal()
			.range(["red", "blue", "orange"]);

		var canvas = d3.select("body").append("svg")
			.attr("width", 1500)
			.attr("height", 1500);

		var group = canvas.append("g")
			.attr("transform", "translate(300, 300)");

		var arc = d3.svg.arc()
			.innerRadius(0)
			.outerRadius(r);

		var pie = d3.layout.pie()
			.value(function (d) { return d; });

		var arcs = group.selectAll(".arc")
			.data(pie(data))
			.enter()
				.append("g")
				.attr("class", "arc");

		arcs.append("path")
			.attr("d", arc)
			.attr("fill", function (d) { return color(d.data);});

		arcs.append("text")
			.attr("transform", function (d) { return "translate(" + arc.centroid(d) + ")"; })
			.attr("text-anchor", "middle")
			.attr("font-size", "1.5em")
			.text(function (d) { return d.data; });
*/


/*  tree
		var canvas = d3.select("body").append("svg")
			.attr("width", 500)
			.attr("height", 500)
			.append("g")
				.attr("transform", "translate(50,50)");

		var tree = d3.layout.cluster() //.tree()
			.size([400, 400]);

		d3.json("/mydata.json", function (data) {

			var nodes = tree.nodes(data);
			var links = tree.links(nodes);

			var node = canvas.selectAll(".node")
				.data(nodes)
				.enter()
					.append("g")
						.attr("class", "node")
						.attr("transform", function (d) { return "translate(" + d.y + "," + d.x + ")"; })

			node.append("circle")
				.attr("r", 5)
				.attr("fill", "steelblue")

			node.append("text")
				.text(function (d) { return d.name; })

			var diagonal = d3.svg.diagonal()
				.projection(function (d) { return [d.y, d.x]; })

			canvas.selectAll(".link")
				.data(links)
				.enter()
					.append("path")
						.attr("class", "link")
						.attr("fill", "none")
						.attr("stroke", "#ADADAD")
						.attr("d", diagonal);
		})
*/
	var width = 800;
	var height = 800;

	var canvas = d3.select("body").append("svg")
	 	.attr("width", width)
	 	.attr("height", height)
	 	.append("g")
	 		.attr("transform", "translate(50,50)");

	var pack = d3.layout.pack()
		.size([width, height])
		.padding(10);

	d3.json("/mydata.json", function (data) {
		var nodes = pack.nodes(data);
		var node = canvas.selectAll(".node")
			.data(nodes)
			.enter()
				.append("g")
					.attr("class", "node")
					.attr("transform", function (d) { return "translate(" + d.x + ", " + d.y + ")"; });

		node.append("circle")
			.attr("r", function (d) { return d.r; })
			.attr("fill", "steelblue")
			.attr("opacity", 0.25)
			.attr("stroke", "#ADADAD")
			.attr("stroke-wdth", "2");

		node.append("text")
			.text(function (d) { return d.children ? "" : d.name; })


	})
	</script>
</body>
</html>
